@inherits WebViewPage<Umbraco.Forms.Web.Models.FormViewModel>
@using Umbraco.Forms.Core.Enums
@using Umbraco.Forms.Mvc
@using Umbraco.Forms.Mvc.Models
@using Umbraco.Forms.Mvc.BusinessLogic

@*Set a default class on all fields - needed by bootstrap*@
@Html.SetFormFieldClass("form-control")

@* Wrap all fields in a form-group - needed by bootstrap to correctly display fields horizontally*@
@Html.SetFormFieldWrapperClass("form-group row")
<style>
    .mt-15 {
        margin-bottom: 15px;
    }
    [lang="ar"] .checkbox input[type="checkbox"], .checkbox-inline input[type="checkbox"], .radio input[type="radio"], .radio-inline input[type="radio"]{
        margin-left:0px;
    }
    [lang="ar"] .page-content .leasing-form .form div.radio input[type=radio] {
        margin-right:-11px;
    }
    .leasing-form .customFlexContent .umbraco-forms-container:nth-child(4) {
        margin-top: 30px !important;
    }
    .page-content .leasing-form .form .form-group .form-control {
        background: #ffffff;
    }
</style>

<div class="umbraco-forms-page form-horizontal">

    @if (string.IsNullOrEmpty(Model.CurrentPage.Caption) == false)
    {
        <h4 class="umbraco-forms-caption">@Model.CurrentPage.Caption</h4>
    }
                
    @if (Model.ShowValidationSummary)
    {
        @Html.ValidationSummary(false)
    }

    @foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets)
    {

        <fieldset class="umbraco-forms-fieldset mt-15" id="@fs.Id">
            @if (string.IsNullOrEmpty(fs.Caption) == false)
            {
                <legend>@fs.Caption</legend>
            }

            <div class="row customFlexContent">
                @foreach (var c in fs.Containers)
                {
                    <div class="umbraco-forms-container @("col-md-" + c.Width)">
                        @foreach (FieldViewModel f in c.Fields)
                        {
                            bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;

                            <div class="@Html.GetFormFieldWrapperClass(f.FieldTypeName)  @f.CssClass" @{ if (hidden) { <text> style="display: none" </text>  } }>
                                @if (!f.HideLabel)
                                {
                                    <label for="@f.Id" class="col-sm-12 control-label=x umbraco-forms-label">
                                        @f.Caption                                        
                                        @if (f.ShowIndicator || (!string.IsNullOrEmpty(f.Caption) && f.Mandatory))
                                        {
                                            <span class="umbracoForms-Indicator">@Model.Indicator</span>
                                        }
                                    </label>
                                }
                                <div class="col-sm-12 umbraco-forms-field-wrapper">
                                    @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)

                                    @if (Model.ShowFieldValidaton)
                                    {
                                        @Html.ValidationMessage(f.Id)
                                    }

                                    @*@if (!string.IsNullOrEmpty(f.ToolTip))
                                    {
                                        <p class="help-block">@f.ToolTip</p>
                                    }*@
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </fieldset>
    }


    <div style="display: none" aria-hidden="true">
        <input type="text" name="@Model.FormId.ToString().Replace("-", "")" />
    </div>

    <br />
    <div class="umbraco-forms-navigation row-fluid">		
        <div class="col-sm-12 buttons">
            @if (Model.IsMultiPage)
            {
                if (!Model.IsFirstPage)
                {
                    <input class="btn prev cancel" type="submit" value="@Model.PreviousCaption" name="__prev"/>
                }
                if (!Model.IsLastPage)
                {
                    <input type="submit" class="btn next" value="@Model.NextCaption" name="next"/>
                }
                if (Model.IsLastPage)
                {
                    <input type="submit" class="btn primary" value="@Model.SubmitCaption" name="submitbtn"/>
                }
            }
            else
            {
                <input type="submit" id="btnSubmit" class="btn btn-primary" value="@Model.SubmitCaption" name="submitbtn"/>
            }
        </div>
    </div>
</div>

@Html.Partial("Forms/Themes/default/ScrollToFormScript")