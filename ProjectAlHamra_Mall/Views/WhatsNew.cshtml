@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using ContentModels = Umbraco.Web.PublishedModels;
@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.WhatsNew>
@{
    Layout = "master.cshtml";
}

<style>
.card{
    background:#ffffff;
}
.main__huna-brand {
    background: rgba(182, 161, 113, .1);
    padding: 40px 0;
}
    .main__huna-brand .card {
    border: 1px solid #b6a171;
    margin: 16px 0;
    text-align: center;
}
.main__huna-brand .card .card-body {
    height: 280px;
    min-height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.main__huna-brand .card .card-footer {
    border-top: 1px solid #b6a171;
    border-radius: 0;
    background: rgba(0, 0, 0, 0);
    padding: 20px 0px;
    cursor: pointer;
}
.main__huna-brand .card .card-body img{
    max-width:60%;
}
</style>
@* Main Banner *@
@{
    var mainBanner = Model.Value<IPublishedContent>("mainBanner");
    if (mainBanner != null)
    {
        <div class="container header-container slider-main ">
            <div class="row">
                <div class="main-banner mt-100">
                    <div class="banner_info inner_banner_info" style="display: block;width: 100%;">
                        <div class="item a inner_banner_item shopBanner" style="center top no-repeat;">
                            <img src="@mainBanner.Url()">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

@* Breadcrumbs and Title *@
<section class="filter-holder">
    <div class="container-fluid custom-container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="clearfix title-holder-x">
                    <h1 class="title">@Model.Value("mainHeading")</h1>
                </div>
            </div>
        </div>
    </div>
</section>
@* Main Content Section *@
@{
    DateTime today = DateTime.Today;
    var shopList = Model.AncestorOrSelf(1).DescendantsOfType("shopsLanding").FirstOrDefault()?.Children().Where(e => e.IsVisible() && e.HasValue("endDate") && DateTime.Parse(e.Value<string>("endDate")) >= today);
    var dineList = Model.AncestorOrSelf(1).DescendantsOfType("dineLanding").FirstOrDefault()?.Children().Where(e => e.IsVisible() && e.HasValue("endDate") && DateTime.Parse(e.Value<string>("endDate")) >= today);
    var entertainList = Model.AncestorOrSelf(1).DescendantsOfType("entertainment").FirstOrDefault()?.Children().Where(e => e.IsVisible() && e.HasValue("endDate") && DateTime.Parse(e.Value<string>("endDate")) >= today);
    if ((shopList != null && shopList.Any()) || (dineList != null && dineList.Any()) || (entertainList != null && entertainList.Any()))
    {
        <section class="main__huna-brand whatsNew">
            <div class="container header-container">
                <div class="row">
                    @{
                        foreach (var list in new List<IEnumerable<IPublishedContent>> { shopList }.Where(l => l != null))
                        {
                            foreach (var item in list)
                            {
                                var logo = item.Value<IPublishedContent>("shopLogo");
                                var shopTitle = item.Value<string>("shopTitle");
                                var shopCategory = item.Value<IEnumerable<IPublishedContent>>("shopCategory");
                                if(shopCategory != null)
                                {
                                    var categoryUrl = shopCategory.FirstOrDefault()?.Url;
                                    if (logo != null)
                                    {
                                        <div class="col-12 col-md-6 col-lg-3 col-xl-3">
                                            <div class="card">
                                                <div class="card-body">
                                                    <img class="card-img-top" src="@logo.Url()" alt="Card image cap">
                                                </div>
                                                <div class="card-footer">
                                                    <a href="@categoryUrl">
                                                        <button type="button" class="collapsible">
                                                            @if(!string.IsNullOrEmpty(shopTitle))
                                                            {
                                                                @shopTitle
                                                            }
                                                        </button>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        }
                        foreach (var list in new List<IEnumerable<IPublishedContent>> { dineList }.Where(l => l != null))
                        {
                            foreach (var item in list)
                            {
                                var logo = item.Value<IPublishedContent>("shopLogo");;
                                var shopTitle = item.Value<string>("shopTitle");
                                var dineCategory = item.Value<IEnumerable<IPublishedContent>>("dineCategory");
                                if(dineCategory != null)
                                {
                                    var categoryUrl = dineCategory.FirstOrDefault()?.Url;
                                    if (logo != null)
                                    {
                                        <div class="col-12 col-md-6 col-lg-3 col-xl-3">
                                            <div class="card">
                                                <div class="card-body">
                                                    <img class="card-img-top" src="@logo.Url()" alt="Card image cap">
                                                </div>
                                                <div class="card-footer">
                                                    <a href="@categoryUrl">
                                                        <button type="button" class="collapsible">
                                                            @if(!string.IsNullOrEmpty(shopTitle))
                                                            {
                                                                @shopTitle
                                                            }
                                                        </button>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        }
                        foreach (var list in new List<IEnumerable<IPublishedContent>> { entertainList }.Where(l => l != null))
                        {
                            foreach (var item in list)
                            {
                                var logo = item.Value<IPublishedContent>("entertainmentDetailsImage");
                                var entertainmentDetailsTitle = item.Value<string>("entertainmentDetailsTitle");
                                if (entertainList != null)
                                {
                                    foreach (var itemEntertain in entertainList)
                                    {
                                        var entertainmentUrl = itemEntertain.Url();
                                        if (entertainmentUrl.Contains("/en/entertain/"))
                                        {
                                            entertainmentUrl = "/en/entertain";
                                        }
                                        
                                        <div class="col-12 col-md-6 col-lg-3 col-xl-3">
                                            <div class="card">
                                                <div class="card-body">
                                                    <img class="card-img-top" src="@logo.Url()" alt="Card image cap">
                                                </div>
                                                <div class="card-footer">
                                                    <a href="@entertainmentUrl" class="collapsible">
                                                        @if (!string.IsNullOrEmpty(entertainmentDetailsTitle))
                                                        {
                                                            @entertainmentDetailsTitle
                                                        }
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        }
                    }
                </div>
            </div>
        </section>
    }
}