@using Umbraco.Core.PropertyEditors
@using Umbraco.Web.Models;
@using Umbraco.Web;
@using System.Threading;
@using ProjectAlHamra_Mall.App_Code
@inherits UmbracoViewPage
@{
    Layout = null;
    // Get basic design settings from the homepage
    var currLang = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName;
    var site = Model.Root();
    var master = (Master)Model.Root();
    IEnumerable<IPublishedContent> children = site.Children();

    var uiCurrentCulture = Thread.CurrentThread.CurrentUICulture;
    var selection = site.Children.Where(x => x.IsVisible());
    var moreItems = selection.Where(x => x.Name == "Media Center");
    var mainItems = selection.Except(moreItems);
    var culture = System.Threading.Thread.CurrentThread.CurrentUICulture.Name.ToLower();
    var translations = new Dictionary<string, string>
    {
        { "Shop", culture == "ar" ? "التسوق" : "Shop" },
        { "Dine", culture == "ar" ? "المطاعم والمقاهي" : "Dine" },
        { "Entertain", culture == "ar" ? "الترفيه" : "Entertain"},
        { "About Us", culture == "ar" ? "عن الحمرا مول" : "About Us" },
        { "Contact Us", culture == "ar" ? "اتصل بنا" : "Contact Us" },
        { "Media Center", culture == "ar" ? "المركز الاعلامي" : "Media Center" },
        { "Leasing Enquiry", culture == "ar" ? "الإستعلام عن التأجير" : "Leasing Enquiry"},
        { "Terms and Condition", culture == "ar" ? "الشروط والأحكام" :"Terms and Condition"},
        { "Loyalty", culture == "ar" ? "الولاء" :"Loyalty"},
        { "Services", culture == "ar" ? "الخدمات" :"Services"},
        { "Etihad Guest", culture == "ar" ? "شراكة ضيف الاتحاد" : "Etihad Guest"},
        { "More", culture == "ar" ? "المزيد" : "More" }
    };

}

<!doctype html>
<html lang="@currLang">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="shortcut icon" type="image/x-icon" href="/media/fppbelqj/al-hamra-logo-2.jpg">
    <link rel="stylesheet" href=@Url.Content("~/css/animate.css?v=@V1")>
    <link rel="stylesheet" href=@Url.Content("https://use.fontawesome.com/releases/v5.15.4/css/all.css")>
    <link rel="stylesheet" href=@Url.Content("~/css/owl.carousel.css?v=@V1")>

    <link rel="stylesheet" type="text/css" href=@Url.Content("~/css/settings.css?v=@V1") media="screen" />
    <link rel="stylesheet" href=@Url.Content("~/css/nice-select.css?v=@V1")>
    <link rel="stylesheet" type="text/css" href=@Url.Content("~/css/slick.css?v=@V1") />
    <link rel="stylesheet" type="text/css" href=@Url.Content("~/css/slick-theme.css?v=@V1") />
    <link rel="stylesheet" href=@Url.Content("~/css/leaflet.css?v=@V1") />
    <link rel="stylesheet" href=@Url.Content("~/css/responsive.css?v=@V1")>    
    <link rel="stylesheet" href=@Url.Content("~/css/bootstrap.min.css?v=@V1")>
    <link rel="stylesheet" href=@Url.Content("~/css/style.css?v=@V1")>

    <title>@Model.Name - @master.SiteName</title>
    <link href=@Url.Content("~/css/validationEngine.jquery.css?v=@V1") rel="stylesheet" />
    <link rel="stylesheet" href=@Url.Content("https://cdn.jsdelivr.net/jquery.slick/1.4.1/slick.css")>



    @RenderSection("Header", required: false)

</head>
<style>
    [lang="ar"] .rtlDirection{
        direction: rtl;
    }
    [lang="ar"] .main-menu ul li a {
   letter-spacing: 0;
    }
    [lang="ar"] .arFlex{
        display:flex;
    }
    [lang="ar"] .tooltiptext{
        direction: ltr;
        display: flex;
        justify-content: end;
        gap: 10px;
    }
    .tooltiptext{
        display: flex;
        gap: 10px;
    }
    .tooltiptext svg{
        width:17px;
    }
    .centerClass{
        text-align:center;
    }
        [lang="ar"] .shopBanner {
    height: 500px !important;
    margin-top: 60px !important;
}
    @@media screen and (max-width: 767px) {
        .toggle-slide-right {
            margin-top: 0px;
            position: relative;
            top: -8px;
        }
        .sticky .toggle-slide-right {
            top: 0px;
        }
    }
</style>
<body class="frontpage theme-font theme-color rtlDirection">
    <div class="all-content-area rtlDirection">
        <aside class="menu slide-menu-right hide_mob">
            <div class="close_btn_hold">
                <a href="JavaScript:void(0);" class="close-menu">
                    <svg xmlns="http://www.w3.org/2000/svg" width="17px" height="17px" viewBox="0 0 414.298 414.299"><path d="M3.663 410.637a12.465 12.465 0 0 0 8.839 3.661c3.199 0 6.398-1.221 8.839-3.661l185.809-185.81 185.81 185.811a12.465 12.465 0 0 0 8.84 3.661c3.198 0 6.397-1.221 8.839-3.661 4.881-4.881 4.881-12.796 0-17.679l-185.811-185.81 185.811-185.81c4.881-4.882 4.881-12.796 0-17.678-4.882-4.882-12.796-4.882-17.679 0l-185.81 185.81L21.34 3.663c-4.882-4.882-12.796-4.882-17.678 0-4.882 4.881-4.882 12.796 0 17.678l185.81 185.809L3.663 392.959c-4.882 4.882-4.882 12.797 0 17.678z" fill="#FFF" /></svg>
                </a>
            </div>
            <ul class="menu">
                @foreach (var item in selection)
                {
                    var isExcluded = new List<string> {
                        "Terms and Condition", "Bank Services Type", "Bank Services",
                        "Shop Details", "Home", "Dine Category", "Thank you Leasing Enquiry", "Thank You Contact Us",
                        "Shop Category","Whats New Slider", "Whats New" ,
                        "Indulge Your Senses", "Thank You", "About Us", "Etihad Guest"
                    }.Contains(item.Name);
            
                    var itemName = currLang == "ar" ? (translations.ContainsKey(item.Name) ? translations[item.Name] : item.Name) : item.Name;
                    var link = currLang == "en" ? item.Url().Replace("ar/", "en/") : item.Url().Replace("en/", "ar/");
            
                    if (!isExcluded)
                    {
                        <li><a rel="canonical" href="@link">@itemName</a><hr></li>
                    }
                }
            </ul>
            
            <div class="col-sm-12">
                <div class="row">
                    <ul class="aside_social">
                        <li><a rel="canonical" href="@Umbraco.GetDictionaryValue("facebookUrl")" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" viewBox="-110 1 511 512" width="20"><path d="M180 512H98.008c-13.695 0-24.836-11.14-24.836-24.836V302.227H25.336C11.64 302.227.5 291.082.5 277.39v-79.246c0-13.696 11.14-24.836 24.836-24.836h47.836v-39.684c0-39.348 12.355-72.824 35.726-96.805C132.375 12.73 165.184 0 203.778 0l62.53.102c13.672.023 24.794 11.164 24.794 24.835v73.579c0 13.695-11.137 24.836-24.829 24.836l-42.101.015c-12.84 0-16.11 2.574-16.809 3.363-1.152 1.31-2.523 5.008-2.523 15.223v31.352h58.27c4.386 0 8.636 1.082 12.288 3.12 7.88 4.403 12.778 12.727 12.778 21.723l-.031 79.247c0 13.687-11.141 24.828-24.836 24.828h-58.47v184.941C204.84 500.86 193.696 512 180 512zm-76.813-30.016h71.633V288.79c0-9.144 7.442-16.582 16.582-16.582h66.727l.027-68.883h-66.758c-9.14 0-16.578-7.437-16.578-16.582v-44.789c0-11.726 1.192-25.062 10.043-35.086 10.696-12.117 27.551-13.515 39.301-13.515l36.922-.016V30.109l-57.332-.093c-62.024 0-100.566 39.703-100.566 103.609v53.117c0 9.14-7.438 16.582-16.579 16.582H30.516v68.883h56.093c9.141 0 16.579 7.438 16.579 16.582zM266.25 30.117h.004zm0 0" /></svg></a></li>
                        @*<li><a rel="canonical" href="@Umbraco.GetDictionaryValue("twitterUrl")" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -47 512 512" width="20"><path d="M512 55.965c-32.207 1.484-31.504 1.363-35.145 1.668L495.93 3.16s-59.54 21.902-74.633 25.82c-39.64-35.628-98.563-37.203-140.688-11.312-34.496 21.207-53.011 57.625-46.836 100.191C166.637 108.543 110.07 76.72 65.41 23.07L51.285 6.105 40.73 25.488C27.39 49.98 22.96 77.984 28.254 104.34A113.287 113.287 0 0 0 39.23 135.12l-12.117-4.695-1.437 20.246c-1.457 20.566 5.39 44.574 18.32 64.215a114.185 114.185 0 0 0 14.27 17.597l-6.262-.96 7.64 23.199c10.043 30.48 30.903 54.062 57.973 67.172-27.035 11.472-48.875 18.793-84.773 30.601L0 363.293l30.336 16.586c11.566 6.324 52.437 27.445 92.82 33.781 89.766 14.078 190.832 2.613 258.871-58.664 57.309-51.613 76.114-125.031 72.207-201.433-.59-11.567 2.579-22.606 8.922-31.079 12.707-16.964 48.766-66.406 48.844-66.52zm-72.832 48.55c-10.535 14.067-15.813 32.032-14.867 50.579 3.941 77.066-17.028 136.832-62.328 177.629-52.918 47.66-138.274 66.367-234.172 51.324-17.367-2.723-35.317-8.82-50.172-14.91 30.098-10.356 53.34-19.586 90.875-37.352l52.398-24.8-57.851-3.704c-27.711-1.773-50.785-15.203-64.969-37.008a103.763 103.763 0 0 0 22.023-3.671l55.176-15.368-55.636-13.625c-27.036-6.62-42.446-22.797-50.614-35.203-5.363-8.152-8.867-16.504-10.969-24.203 5.579 1.496 12.083 2.563 22.57 3.602l51.497 5.093-40.8-31.828c-29.4-22.93-41.18-57.379-32.544-90.496 91.75 95.164 199.477 88.012 210.32 90.528-2.386-23.184-2.449-23.239-3.074-25.446-13.886-49.09 16.547-74.015 30.274-82.453 28.672-17.621 74.183-20.277 105.707 8.754 6.808 6.266 16.015 8.73 24.633 6.59 7.734-1.922 14.082-3.957 20.296-6.172L434.004 89.32l16.516.012a8240.32 8240.32 0 0 1-11.352 15.184zm0 0" /></svg></a></li>*@
                        <li><a rel="canonical" href="@Umbraco.GetDictionaryValue("instagramUrl")" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="20"><path d="M352 0H160C71.648 0 0 71.648 0 160v192c0 88.352 71.648 160 160 160h192c88.352 0 160-71.648 160-160V160C512 71.648 440.352 0 352 0zm112 352c0 61.76-50.24 112-112 112H160c-61.76 0-112-50.24-112-112V160C48 98.24 98.24 48 160 48h192c61.76 0 112 50.24 112 112v192z" /><path d="M256 128c-70.688 0-128 57.312-128 128s57.312 128 128 128 128-57.312 128-128-57.312-128-128-128zm0 208c-44.096 0-80-35.904-80-80 0-44.128 35.904-80 80-80s80 35.872 80 80c0 44.096-35.904 80-80 80z" /><circle cx="393.6" cy="118.4" r="17.056" /></svg></a></li>

                    </ul>
                </div>
            </div>
            @*<div class="col-sm-12">
                <div class="row">
                    <ul class="aside_abt_contact">
                        <li><a rel="canonical" href="@Umbraco.GetDictionaryValue("AboutUsUrl")">@Umbraco.GetDictionaryValue("About Us")</a></li>
                        <li><a rel="canonical" href="@Umbraco.GetDictionaryValue("ContactUsUrl")">@Umbraco.GetDictionaryValue("Contact Us")</a></li>
                    </ul>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="subscribe_form">
                    <h3>Subscribe here</h3>
                    <form class="adide_sub_form">
                        <input type="text" placeholder="example@gmail.com"><button class="sub_btn"><svg xmlns="http://www.w3.org/2000/svg" width="20" viewBox="0 0 535.5 535.5"><path fill="#FFF" d="M0 497.25l535.5-229.5L0 38.25v178.5l382.5 51-382.5 51z" /></svg></button>
                        <div class="clearfix"></div>
                    </form>
                </div>
            </div>*@
            @if (currLang == "ar")
            {
                <div class="col-sm-12 aside_footer_dt">@Umbraco.GetDictionaryValue("pageCopyRights")</div>
            }
            else
            {
                <div class="col-sm-12 aside_footer_dt">
                    @Umbraco.GetDictionaryValue("pageCopyRights")
                </div>
            }
        </aside>
        <header>
            <div class="header-area header-sticky inner_header_bg ">
                <div class="container header-container">
                    <div class="row arFlex">
                        <div class="col-md-2 col-sm-8 col-xs-8  ">
                            <div class="logo rtlDirection">
                                @if (currLang == "en")
                                {
                                    <h1>
                                        <a rel="canonical" href="@Umbraco.GetDictionaryValue("Home")"
                                           title="Alhamra Mall"><img src="/media/fqybrcf2/al_hamra_en.jpg" alt=""></a>
                                    </h1>
                                }
                                else if (currLang == "ar")
                                {
                                    <h1>
                                        <a rel="canonical" href="@Umbraco.GetDictionaryValue("Home")"
                                           title="Alhamra Mall"><img src="/media/imma5npb/al_hamra_ar.jpg" alt=""></a>
                                    </h1>
                                }
                            </div>
                        </div>

                        <div class="col-md-5 hidden-xs hidden-sm">
                            <div class="main-menu hidden-xs hidden-sm">
                                <nav style="display:block;">
                                    <ul class="menu">
                                        @{
                                            Func<string, bool> shouldHideItem = itemName =>
                                                itemName == "Terms and Condition" ||
                                                itemName == "Bank Services Type" ||
                                                itemName == "Bank Services" ||
                                                itemName == "Leasing Enquiry" ||
                                                itemName == "Shop Category Details" ||
                                                itemName == "Home" ||
                                                itemName == "Dine Category" ||
                                                itemName == "Shop Category" ||
                                                itemName == "WHATS NEW" ||
                                                itemName == "Indulge Your Senses" ||
                                                itemName == "Thank you Leasing Enquiry"||
                                                itemName == "Rewards"||
                                                itemName == "Services"||
                                                itemName == "Thank You Contact Us" ||
                                                itemName == "Etihad Guest"||
                                                itemName == "Whats New Slider"||
                                                itemName == "Whats New"||
                                                itemName == "About Us";
                                    
                                            if (currLang == "en")
                                            {
                                                foreach (var item in mainItems)
                                                {
                                                    var itemName = translations.ContainsKey(item.Name) ? translations[item.Name] : item.Name;
                                                    if (shouldHideItem(item.Name))
                                                    {
                                                        <!--<li>
                                                            <a class="nav-link @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@item.Url">@itemName</a>
                                                        </li>-->
                                                    }
                                                    else if (item.Name == "Loyalty")
                                                    {
                                                        IEnumerable<IPublishedContent> loyaltyChildren = Model.AncestorOrSelf(1).DescendantsOfType("rewardsLanding").FirstOrDefault().Children().Where(e => e.IsVisible());
                                                        if (loyaltyChildren != null && loyaltyChildren.Any())
                                                        {
                                                            <li class="dropdown">
                                                                <a href="@Umbraco.GetDictionaryValue("LoyaltyHref")" id="mainLink" class="dropdown-toggle nav-link">
                                                                    @itemName 
                                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 129 129" width="12" height="12">
                                                                        <path d="M121.3 34.6c-1.6-1.6-4.2-1.6-5.8 0l-51 51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8 0-1.6 1.6-1.6 4.2 0 5.8l53.9 53.9c.8.8 1.8 1.2 2.9 1.2 1 0 2.1-.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2.1-5.8z" fill="#555" />
                                                                    </svg>
                                                                </a>
                                                                <ul class="dropdown-menu">
                                                                    @foreach (var loyaltyChild in loyaltyChildren)
                                                                    {
                                                                        var itemURL = item.Url();
                                                                        IPublishedContent servItemlink = loyaltyChild.Value<IPublishedContent>("redirectPageLink");
                                                                        if (servItemlink != null)
                                                                        {
                                                                            var servItemlinkType = servItemlink.Url();
                                                                            itemURL = string.IsNullOrEmpty(servItemlinkType) ? null : servItemlinkType == null ? "" : servItemlinkType;
                                                                        }
                                                                        if(loyaltyChild.Id == 1776)
                                                                        {
                                                                            var loyaltyChildName = loyaltyChild.Value<string>("rewardsContentTitle");
                                                                            <li><a href="@Umbraco.GetDictionaryValue("DarnaHref")" target="_blank">@loyaltyChildName</a></li>
                                                                        }
                                                                        else
                                                                        {
                                                                            var loyaltyChildName = loyaltyChild.Value<string>("rewardsContentTitle");
                                                                            <li><a href="@itemURL">@loyaltyChildName</a></li>
                                                                        }
                                                                    }
                                                                </ul>
                                                            </li>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <li>
                                                            <a class="nav-link @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@item.Url">@itemName</a>
                                                        </li>
                                                    }
                                                }
                                    
                                                if (moreItems.Any())
                                                {
                                                    <li class="dropdown">
                                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            @translations["More"]
                                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 129 129" width="12" height="12">
                                                                <path d="M121.3 34.6c-1.6-1.6-4.2-1.6-5.8 0l-51 51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8 0-1.6 1.6-1.6 4.2 0 5.8l53.9 53.9c.8.8 1.8 1.2 2.9 1.2 1 0 2.1-.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2.1-5.8z" fill="#555" />
                                                            </svg>
                                                        </a>
                                                        <ul>
                                                            @foreach (var moreItem in moreItems)
                                                            {
                                                                var moreItemName = translations.ContainsKey(moreItem.Name) ? translations[moreItem.Name] : moreItem.Name;
                                                                <li>
                                                                    <a class="nav-link @(moreItem.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@moreItem.Url">@moreItemName</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </li>
                                                }
                                            }
                                            else if (currLang == "ar")
                                            {
                                                if (moreItems.Any())
                                                {
                                                    <li class="dropdown">
                                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            @translations["More"]
                                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 129 129" width="12" height="12">
                                                                <path d="M121.3 34.6c-1.6-1.6-4.2-1.6-5.8 0l-51 51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8 0-1.6 1.6-1.6 4.2 0 5.8l53.9 53.9c.8.8 1.8 1.2 2.9 1.2 1 0 2.1-.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2.1-5.8z" fill="#555" />
                                                            </svg>
                                                        </a>
                                                        <ul>
                                                            @foreach (var moreItem in moreItems)
                                                            {
                                                                var moreItemName = translations.ContainsKey(moreItem.Name) ? translations[moreItem.Name] : moreItem.Name;
                                                                <li>
                                                                    <a class="nav-link @(moreItem.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@moreItem.Url">@moreItemName</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </li>
                                                }
                                    
                                                foreach (var item in mainItems)
                                                {
                                                    var itemName = translations.ContainsKey(item.Name) ? translations[item.Name] : item.Name;
                                                    if (shouldHideItem(item.Name))
                                                    {
                                                        <!--<li>
                                                            <a class="nav-link @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@item.Url">@itemName</a>
                                                        </li>-->
                                                    }
                                                    else if (item.Name == "Loyalty")
                                                    {
                                                        IEnumerable<IPublishedContent> loyaltyChildren = Model.AncestorOrSelf(1).DescendantsOfType("rewardsLanding").FirstOrDefault().Children().Where(e => e.IsVisible());
                                                        if (loyaltyChildren != null && loyaltyChildren.Any())
                                                        {
                                                            <li class="dropdown">
                                                                <a href="@Umbraco.GetDictionaryValue("LoyaltyHref")" id="mainLink" class="dropdown-toggle nav-link">
                                                                    @itemName 
                                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 129 129" width="12" height="12">
                                                                        <path d="M121.3 34.6c-1.6-1.6-4.2-1.6-5.8 0l-51 51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8 0-1.6 1.6-1.6 4.2 0 5.8l53.9 53.9c.8.8 1.8 1.2 2.9 1.2 1 0 2.1-.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2.1-5.8z" fill="#555" />
                                                                    </svg>
                                                                </a>
                                                                <ul class="dropdown-menu">
                                                                    @foreach (var loyaltyChild in loyaltyChildren)
                                                                    {
                                                                        var itemURL = item.Url();
                                                                        IPublishedContent servItemlink = loyaltyChild.Value<IPublishedContent>("redirectPageLink");
                                                                        if (servItemlink != null)
                                                                        {
                                                                            var servItemlinkType = servItemlink.Url();
                                                                            itemURL = string.IsNullOrEmpty(servItemlinkType) ? null : servItemlinkType == null ? "" : servItemlinkType;
                                                                        }
                                                                        if(loyaltyChild.Id == 1776)
                                                                        {
                                                                            var loyaltyChildName = loyaltyChild.Value<string>("rewardsContentTitle");
                                                                            <li><a href="@Umbraco.GetDictionaryValue("DarnaHref")" target="_blank">@loyaltyChildName</a></li>
                                                                        }
                                                                        else
                                                                        {
                                                                            var loyaltyChildName = loyaltyChild.Value<string>("rewardsContentTitle");
                                                                            <li><a href="@itemURL">@loyaltyChildName</a></li>
                                                                        }
                                                                    }
                                                                </ul>
                                                            </li>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <li>
                                                            <a class="nav-link @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@item.Url">@itemName</a>
                                                        </li>
                                                    }
                                                }
                                            }
                                        }
                                    </ul>

                                </nav>
                            </div>
                        </div>
                        <div class="col-md-5 col-sm-4 col-xs-4 text-end">
                            <ul class="top_br_linksright">
                                <li class="search desk-hide">
                                    <i class="fas fa-search" aria-hidden="true" name="topSearchMainMob" ></i>
                                </li>
                                <li class="hide_mob">
                                     <!--Start Search Box-->
                                    <div class="search-bar">
                                        <input type="text" name="topSearchMain" id="topSearchMain" placeholder="@Umbraco.GetDictionaryValue("Search")" autocomplete="off" />
                                            <i class="searchIcon">
                                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 451 451" width="18" height="18">
                                                    <path d="M447.05 428l-109.6-109.6c29.4-33.8 47.2-77.9 47.2-126.1C384.65 86.2 298.35 0 192.35 0 86.25 0 .05 86.3.05 192.3s86.3 192.3 192.3 192.3c48.2 0 92.3-17.8 126.1-47.2L428.05 447c2.6 2.6 6.1 4 9.5 4s6.9-1.3 9.5-4c5.2-5.2 5.2-13.8 0-19zM26.95 192.3c0-91.2 74.2-165.3 165.3-165.3 91.2 0 165.3 74.2 165.3 165.3s-74.1 165.4-165.3 165.4c-91.1 0-165.3-74.2-165.3-165.4z"
                                                          fill="#000000" />
                                                </svg>
                                            </i>
                                    </div>
                                    <div id="SearchMainDiv" class="search-popup" style="display:none;">
                                        @*<h4>@Umbraco.GetDictionaryValue("QuickLinks")</h4>*@
                                        <ul id="topSearchMainUL"></ul>
                                    </div>
                                    <!--End Search Box-->
                                </li>
                                <li class="hide_mob">
                                    <a href="tel:+97172432594" class="tooltip1">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                             viewBox="0 0 512 512">
                                            <path d="M492.557 400.56L392.234 300.238c-11.976-11.975-31.458-11.975-43.435 0l-26.088 26.088c-8.174 8.174-10.758 19.845-7.773 30.241l-9.843 9.843-.008.008c-6.99 6.998-50.523-3.741-103.145-56.363-52.614-52.613-63.356-96.139-56.366-103.142 0-.002.002-.002.002-.002l9.852-9.851a30.876 30.876 0 0 0 8.523 1.207c7.865 0 15.729-2.993 21.718-8.98l26.088-26.088c11.975-11.975 11.975-31.458 0-43.434L111.436 19.441c-5.8-5.8-13.513-8.994-21.716-8.994-8.205 0-15.915 3.196-21.716 8.994l-26.09 26.09c-8.174 8.174-10.758 19.846-7.773 30.241 0 0-8.344 8.424-8.759 8.956-27.753 30.849-32.96 79.418-14.561 137.487 18.017 56.857 56.857 117.088 109.367 169.595 52.508 52.508 112.739 91.348 169.596 109.367 22.84 7.237 44.207 10.823 63.61 10.823 31.813 0 58.337-9.648 77.35-28.66l5.474-5.474a30.83 30.83 0 0 0 8.532 1.213c8.205 0 15.917-3.196 21.716-8.994l26.09-26.09c11.975-11.975 11.975-31.459.001-43.435zM89.72 41.157l100.324 100.325-26.074 26.102-.014-.014-.375-.375-49.787-49.787-50.163-50.161 26.089-26.09zm319.309 420.466l-.005.005c-22.094 22.091-61.146 25.74-109.961 10.27-52.252-16.558-108.065-52.714-157.156-101.806C92.814 321 56.658 265.189 40.101 212.936c-15.47-48.817-11.821-87.87 10.275-109.967l.002-.002 2.77-2.77 77.857 77.856-7.141 7.141-.015.017c-29.585 29.622 5.963 96.147 56.378 146.562 37.734 37.734 84.493 67.14 118.051 67.14 11.284 0 21.076-3.325 28.528-10.778l.008-.008 7.133-7.133 77.857 77.856-2.775 2.773zm35.723-13.255L344.428 348.044l26.088-26.088L470.84 422.278s-26.079 26.099-26.088 26.09zM388.818 123.184c-29.209-29.209-68.042-45.294-109.344-45.293-8.481 0-15.356 6.875-15.356 15.356s6.876 15.356 15.356 15.356c33.1-.002 64.219 12.89 87.628 36.297 23.406 23.406 36.295 54.525 36.294 87.624 0 8.481 6.875 15.358 15.356 15.358 8.48 0 15.356-6.875 15.356-15.354.001-41.304-16.085-80.135-45.29-109.344z"
                                                  fill="#646464" />
                                            <path d="M443.895 68.107C399.972 24.186 341.578-.002 279.468 0c-8.481 0-15.356 6.876-15.356 15.356 0 8.481 6.876 15.356 15.356 15.356 53.907-.002 104.588 20.992 142.709 59.111 38.118 38.118 59.111 88.799 59.11 142.706 0 8.481 6.875 15.356 15.356 15.356 8.48 0 15.356-6.875 15.356-15.354.002-62.112-24.186-120.504-68.104-164.424zM333.737 178.26c-14.706-14.706-33.465-22.477-54.256-22.477h-.006c-8.481.002-15.356 6.876-15.354 15.358.002 8.481 6.878 15.356 15.358 15.354h.005c12.644 0 23.593 4.536 32.539 13.481 8.819 8.82 13.481 20.075 13.479 32.544-.002 8.481 6.875 15.356 15.354 15.358h.002c8.481 0 15.354-6.875 15.356-15.354.001-20.792-7.77-39.556-22.477-54.264z"
                                                  fill="#646464" />
                                        </svg>
                                        <span class="tooltiptext">@Umbraco.GetDictionaryValue("ContactNumber")</span>
                                    </a>
                                </li>
                                @*@if (uiCurrentCulture.ToString() == "en-US")
                                {
                                <li class="hide_mob">
                                    <a href="JavaScript:Void(0);" class="mall_timing_btn tooltip1">
                                        Mall Timing
                                        <span class="tooltiptext mall_time"
                                              style="margin-top: 5px">@Umbraco.GetDictionaryValue("Mall Timing")</span>
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="hide_mob">
                                        <a href="JavaScript:Void(0);" class="mall_timing_btn tooltip1">
                                            توقيت المول
                                            <span class="tooltiptext mall_time" style="margin-top: 5px">
                                                @Umbraco.GetDictionaryValue("Mall Timing") !
                                            </span>
                                        </a>
                                    </li>
                                }*@
                                @{
                                    var selectedLang = uiCurrentCulture.ToString() == "ar" ? "ar" : "en";
                                    var newLang = "";
                                    var newLink = "";
                                    var url = HttpContext.Current.Request.Url.ToString();

                                    if (url.Contains("/en/") || url.Contains("/ar/"))
                                    {
                                        newLang = selectedLang == "en" ? "ar" : "en";
                                        newLink = HttpContext.Current.Request.Url.ToString().Replace($"/{selectedLang}/",
                                        $"/{newLang}/");
                                    }
                                    else
                                    {
                                        newLink = HttpContext.Current.Request.Url.ToString().Replace(":100",
                                        $":100/{selectedLang}/home");
                                        Response.Redirect(newLink);
                                    }
                                }

                                <li class="lang">
                                    <a href="@newLink" hreflang="@newLang" class="gtm-track-language-toggle"
                                       name="LanguageToggle">@Umbraco.GetDictionaryValue("Navigation")</a>
                                </li>
                                <li class="hidden-lg hidden-md visible-sm visible-xs">
                                    <a href="JavaScript:void(0);" class="toggle-slide-right">
                                        <img src="~/Images/menu.png"
                                             alt="">
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <div class="searchbox" style="display:none;">
                            <input type="text" name="topSearchMainMob" id="topSearchMainMob" placeholder="@Umbraco.GetDictionaryValue("Search")" class="form-control" autocomplete="off">
                            <div id="SearchMainMobDiv" class="search-popup">
                                
                                <ul id="topSearchMainMobUL"></ul>
                                
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>

        </header>
    </div>
    <main>
        @RenderBody()
    </main>

    <footer class="footer-bg bg-opacity footer-border pt-40 pb-20  " style="background:#f3f3f3">
        <div class="footer-area-2">
            <div class="container header-container ">
                <div class="row pb-40 pe-i-1 arFlex">
                    <div class='col-lg-3 col-md-12 col-12'>
                        <ul class="footer_menu_linnk">
                            @{
                                Func<string, bool> shouldHideItemFooter = itemName =>
                                    itemName == "Bank Services Type" ||
                                    itemName == "Bank Services" ||
                                    itemName == "Category" ||
                                    itemName == "Home" ||
                                    itemName == "Dine Category" ||
                                    itemName == "Shop Category" ||
                                    itemName == "More" ||
                                    itemName == "Indulge Your Senses" ||
                                    itemName == "WHATS NEW" ||
                                    itemName == "Thank You Contact Us" ||
                                    itemName == "Thank you Leasing Enquiry"||
                                    itemName == "Etihad Guest"||
                                    itemName == "Whats New Slider"||
                                    itemName == "Whats New"||
                                    itemName == "Shop Category Details";
                        
                                foreach (var item in selection)
                                {
                                    var itemName = translations.ContainsKey(item.Name) ? translations[item.Name] : item.Name;
                                    if (shouldHideItemFooter(item.Name))
                                    {
                                        @*<!--<li>
                                            <a class="nav-link @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@item.Url">@itemName</a>
                                        </li>-->*@
                                    }
                                    else
                                    {
                                        <li>
                                            <a class="nav-link @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@item.Url">@itemName</a>
                                        </li>
                                    }
                                }
                            }
                        </ul>

                    </div>
                    <div class="col-lg-4 col-md-12 col-12">
                        <ul class="footerContact">
                            <li>@Umbraco.GetDictionaryValue("section3Subtitle1")<br></li>
                            <li class="tooltiptext">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><path d="M16 64C16 28.7 44.7 0 80 0H304c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H80c-35.3 0-64-28.7-64-64V64zM224 448a32 32 0 1 0 -64 0 32 32 0 1 0 64 0zM304 64H80V384H304V64z"/></svg>
                                @Umbraco.GetDictionaryValue("Phone")
                            </li>
                            <li class="tooltiptext">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M48 64C21.5 64 0 85.5 0 112c0 15.1 7.1 29.3 19.2 38.4L236.8 313.6c11.4 8.5 27 8.5 38.4 0L492.8 150.4c12.1-9.1 19.2-23.3 19.2-38.4c0-26.5-21.5-48-48-48H48zM0 176V384c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V176L294.4 339.2c-22.8 17.1-54 17.1-76.8 0L0 176z"/></svg>
                                @Umbraco.GetDictionaryValue("Email")
                            </li>
                        </ul>
                            @if (uiCurrentCulture.ToString() == "en-US")
                            {
    
                                <div class="socialText">
                                    @*<p>
                                        @Umbraco.GetDictionaryValue("Social_Media")
                                    </p>*@
                                    <p>
                                        @Umbraco.GetDictionaryValue("Follow")
                                        <a rel="canonical" href="@Umbraco.GetDictionaryValue("facebookUrl")" target="_blank">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" viewBox="0 0 96.124 96.123">
                                        <path d="M72.089.02L59.624 0C45.62 0 36.57 9.285 36.57 23.656v10.907H24.037a1.96 1.96 0 0 0-1.96 1.961v15.803a1.96 1.96 0 0 0 1.96 1.96H36.57v39.876a1.96 1.96 0 0 0 1.96 1.96h16.352a1.96 1.96 0 0 0 1.96-1.96V54.287h14.654a1.96 1.96 0 0 0 1.96-1.96l.006-15.803a1.963 1.963 0 0 0-1.961-1.961H56.842v-9.246c0-4.444 1.059-6.7 6.848-6.7l8.397-.003a1.96 1.96 0 0 0 1.959-1.96V1.98A1.96 1.96 0 0 0 72.089.02z" />
                                    </svg>
                                </a>
                                 <a rel="canonical" href="@Umbraco.GetDictionaryValue("instagramUrl")" target="_blank">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" viewBox="0 0 512 512">
                                        <path d="M352 0H160C71.648 0 0 71.648 0 160v192c0 88.352 71.648 160 160 160h192c88.352 0 160-71.648 160-160V160C512 71.648 440.352 0 352 0zm112 352c0 61.76-50.24 112-112 112H160c-61.76 0-112-50.24-112-112V160C48 98.24 98.24 48 160 48h192c61.76 0 112 50.24 112 112v192z" />
                                        <path d="M256 128c-70.688 0-128 57.312-128 128s57.312 128 128 128 128-57.312 128-128-57.312-128-128-128zm0 208c-44.096 0-80-35.904-80-80 0-44.128 35.904-80 80-80s80 35.872 80 80c0 44.096-35.904 80-80 80z" />
                                        <circle cx="393.6" cy="118.4" r="17.056" />
                                    </svg>
                                </a>
                                    </p>
                                </div>
                            }
                            else
                            {
                                <div class="socialText">
                                    @*<p>
                                        @Umbraco.GetDictionaryValue("Social_Media")
                                    </p>*@
                                    <p>
                                        @Umbraco.GetDictionaryValue("Follow")
                                        <a rel="canonical" href="@Umbraco.GetDictionaryValue("facebookUrl")" target="_blank">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" viewBox="0 0 96.124 96.123">
                                                <path d="M72.089.02L59.624 0C45.62 0 36.57 9.285 36.57 23.656v10.907H24.037a1.96 1.96 0 0 0-1.96 1.961v15.803a1.96 1.96 0 0 0 1.96 1.96H36.57v39.876a1.96 1.96 0 0 0 1.96 1.96h16.352a1.96 1.96 0 0 0 1.96-1.96V54.287h14.654a1.96 1.96 0 0 0 1.96-1.96l.006-15.803a1.963 1.963 0 0 0-1.961-1.961H56.842v-9.246c0-4.444 1.059-6.7 6.848-6.7l8.397-.003a1.96 1.96 0 0 0 1.959-1.96V1.98A1.96 1.96 0 0 0 72.089.02z" />
                                            </svg>
                                        </a>
                                 <a rel="canonical" href="@Umbraco.GetDictionaryValue("instagramUrl")" target="_blank">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" viewBox="0 0 512 512">
                                        <path d="M352 0H160C71.648 0 0 71.648 0 160v192c0 88.352 71.648 160 160 160h192c88.352 0 160-71.648 160-160V160C512 71.648 440.352 0 352 0zm112 352c0 61.76-50.24 112-112 112H160c-61.76 0-112-50.24-112-112V160C48 98.24 98.24 48 160 48h192c61.76 0 112 50.24 112 112v192z" />
                                        <path d="M256 128c-70.688 0-128 57.312-128 128s57.312 128 128 128 128-57.312 128-128-57.312-128-128-128zm0 208c-44.096 0-80-35.904-80-80 0-44.128 35.904-80 80-80s80 35.872 80 80c0 44.096-35.904 80-80 80z" />
                                        <circle cx="393.6" cy="118.4" r="17.056" />
                                    </svg>
                                </a>
                                    </p>
                                    
                                </div>
                            }
                    </div>
                    @if(currLang == "en"){
                    <div class="col-lg-5 col-md-12 col-12">
                        <div class="mallTiming">
                            <div class="">
                                <h3 class="centerClass">MALL TIMINGS</h3>
                                <hr>
                                <h3 class="centerClass">Shops</h3>
                                <ul>
                                    <!--<li>-->
                                    <!--    <span>Retail Outlets</span>-->
                                    <!--</li>-->
                                    <li>
                                        <span>Sunday - Thursday</span>
                                        <span> 10:00AM-10:00PM</span>
                                    </li>
                                    <li>
                                        <span>Friday - Saturday</span>
                                        <span> 10:00AM-12:00AM</span>
                                    </li>
                                </ul>
                                <hr />
                                <h3 class="centerClass">Restaurants & Cafes</h3>
                                <ul>
                                    <li>
                                    </li>
                                    <li>
                                        <span>Sunday - Thursday</span>
                                        <span>10:00AM-10:00PM</span>
                                    </li>
                                    <li>
                                        <span>Friday - Saturday</span>
                                        <span> 10:00AM-12:00AM</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    }
                    else if(currLang == "ar"){
                     <div class="col-lg-5 col-md-12 col-12">
                        <div class="mallTiming">
                            <div class="">
                                <h3 class="centerClass">مواعيد المول</h3>
                                <hr>
                                <h3 class="centerClass">محلات</h3>
                                <ul>
                                    <!--<li>-->
                                    <!--    <span>كافة المتاجر</span>-->
                                    <!--</li>-->
                                    <li>
                                        <span>الأحد – الخميس</span>
                                    <span> 10:00 صباحًا - 10:00 مساءً</span>                
                                    </li>
                                    <li>
                                        <span>الجمعة و السبت</span>
                                        <span>10:00 صباحاً - 12:00 بعد منتصف الليل</span>
                                    </li>
                                </ul>
                                <hr />
                                <h3 class="centerClass">المطاعم والمقاهي</h3>
                                <ul>
                                    <li>
                                        <span>الأحد – الخميس</span>
                                        <span> 10:00 صباحًا - 10:00 مساءً</span> 
                                    </li>
                                    <li>
                                        <span>الجمعة و السبت</span>
                                          <span>10:00 صباحاً - 12:00 بعد منتصف الليل</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    }
                </div>

                <hr style=" border-top: 1px solid #a5a5a5;">
                <div class="col-md-12 col-sm-12 col-xs-12 ptb-30">
                    <div class="footer-2-logo">
                        <p style="color:#a5a5a5"> @Umbraco.GetDictionaryValue("pageCopyRights") </p>
                    </div>
                </div>
            </div>
        </div>
    </footer>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>


    <!-- start scrollUp  -->
    <div id="toTop">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 284.929 284.929">
            <path d="M282.082 195.285L149.028 62.24c-1.901-1.903-4.088-2.856-6.562-2.856s-4.665.953-6.567 2.856L2.856 195.285C.95 197.191 0 199.378 0 201.853c0 2.474.953 4.664 2.856 6.566l14.272 14.271c1.903 1.903 4.093 2.854 6.567 2.854s4.664-.951 6.567-2.854l112.204-112.202 112.208 112.209c1.902 1.903 4.093 2.848 6.563 2.848 2.478 0 4.668-.951 6.57-2.848l14.274-14.277c1.902-1.902 2.847-4.093 2.847-6.566.001-2.476-.944-4.666-2.846-6.569z"
                  fill="#FFF" />
        </svg>
    </div>

    <script src="~/scripts/jquery-3.4.1.min.js"></script>
    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="https://use.fontawesome.com/releases/v5.15.4/js/fontawesome.js"></script>

    <script src="~/js/isotope.pkgd.min.js"></script>
    <script src="~/js/owl.carousel.min.js"></script>
    <script src="~/js/jquery.meanmenu.js"></script>
    <script src="~/js/plugins.js"></script>
    <script src="~/js/main.js"></script>
    <script src="~/js/classie.js"></script>
    <script src="~/js/jquery.matchHeight-min.js"></script>
    <script src="~/js/jquery.nice-select.js"></script>

    @*
        <script src="~/js/jquery.validate.min.js"></script>*@

    <!--Slider -->
    <!-- SLIDER REVOLUTION 4.x SCRIPTS  -->
    <script src="~/js/jquery.themepunch.plugins.min.js"></script>
    <script src="~/js/jquery.themepunch.revolution.min.js"></script>
    <!--<script src="~/js/custome_js.js"></script>-->

    <script src="~/js/slick.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.slick/1.4.1/slick.min.js"></script>
    
    <script src="~/js/classie2.js"></script>
    <script src="~/js/salvattore.min.js"></script>
    <script src="~/js/jquery.nice-select.js"></script>
    <script src="~/js/jquery.nice-select.js"></script>
    <script src="~/js/slick.min.js"></script>
    <script src="~/js/jquery.nice-select.js"></script>
    <script src="~/scripts/aos.js"></script>
    
    <script>
        var mainLink = document.getElementById('mainLink');
    
        mainLink.addEventListener('click', function(event) {
        var url;
        if (mainLink) {
            url = "@Umbraco.GetDictionaryValue("LoyaltyHref")";
        } else {
            url = event.target.href; // Get the href attribute of the clicked anchor tag
        }
        window.location.href = url;
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.slick-carousel').slick({
                arrows: true,
                centerPadding: "0px",
                dots: true,
                slidesToShow: 1,
                autoplay: false
            });
            $('.whatsNew-slider').slick({
                arrows: false,
                centerPadding: "0px",
                dots: true,
                slidesToShow: 1,
                autoplay: true
            });
        });
    </script>
    <script>
        function gtmGetDlBase() {
            var l_lang = ('@currLang' == "en" ? "EN" : "AR");
            //debugger;
            return {
                'p_language': l_lang,
                'p_pageurl': '@Request.Url.ToString()',
                'p_loginstatus': 'no',
                'p_userid': ''
            };
        }

        window.dataLayer = window.dataLayer || [];
        window.dataLayer.push(gtmGetDlBase());
        console.log("Page Load", window.dataLayer);

        $(document).ready(function () {
            $(".gtm-track").click(function (e) {
                gtmTrackClick($(this).attr("href"));
            });

            $(".gtm-track-more-event").click(function (e) {
                gtmTrackEvent_MoreClick($(this));
            });

            $(".gtm-track-viewall-event").click(function (e) {
                gtmTrackEvent_MoreClick($(this));
            });

            $(".gtm-track-more-outbound-event").click(function (e) {
                gtmTrackEvent_MoreOutboundClick($(this));
            });

            $(".gtm-track-header-nav-click").click(function (e) {
                gtmTrackEvent_HeaderNavClick($(this));
            });

            $(".gtm-track-header-nav-option-click").click(function (e) {
                gtmTrackEvent_HeaderNavOptionClick($(this));
            });

            $(".gtm-track-language-toggle").click(function (e) {
                gtmTrackEvent_LanguageToggleClick($(this));
            });

            $(".gtm-track-header-social-icons").click(function (e) {
                gtmTrackEvent_HeaderSocialIconsClick($(this));
            });

            $(".gtm-track-footer-social-icons").click(function (e) {
                gtmTrackEvent_FooterSocialIconsClick($(this));
            });

            $(".gtm-track-button-event").click(function (e) {
                gtmTrackEvent_ButtonClick($(this));
            });

            $(".gtm-track-tile-event").click(function (e) {
                gtmTrackEvent_TileClick($(this));
            });
            var isVPlayByAuto = true; //On Page Load If Video Play Event Fire Means Video Is Playing Auto
            $("video").on("play", function (e) {
                if (!isVPlayByAuto) {
                    gtmTrackEvent_VideoPlayClick($(this));
                } else {
                    isVPlayByAuto = false;
                }
            });

            $(".gtm-track-searchbrand-event").click(function (e) {
                gtmTrackEvent_SearchBrandClick($(this));
            });

            $(".gtm-track-app-event").click(function (e) {
                gtmTrackEvent_AppClick($(this));
            });

            $(".gtm-track-button-aldar-buyOnline-event").click(function (e) {
                gtmTrackEvent_AldarBuyOnlineClick($(this));
            });

            $("#submitbtnNewsletter").click(function (e) {
                gtmTrackEvent_SubscribeNewsLetterClick($(this));
            });

            $(".gtm-track-footer-nav-click").click(function (e) {
                gtmTrackEvent_FooterNavClick($(this));
            });

            $(".gtm-track-contactus-click").click(function (e) {
                gtmTrackEvent_ContactUsClick($(this));
            });

            $(".slick-next").click(function (e) {
                gtmTrackEvent_SwipeClick($(this));
            });

            $(".slick-prev").click(function (e) {
                gtmTrackEvent_SwipeClick($(this));
            });

            $(".slick-dots button").click(function (e) {
                gtmTrackEvent_SwipeClick($(this));
            });
        });

        function gtmTrackClick(href) {
            console.log("[GTM-DL]", "Track Outbound Click", href);
            var data = gtmGetDlBase();
            data.p_event = 'outboundClicks';
            data.p_clickURL = href;
            window.dataLayer.push(data);
        }
        function gtmTrackEvent_HeaderDeskSearchClick(objbtn) {
            console.log("[GTM-DL]", "Track event Header Desktop Search Click", objbtn.attr("name"));
            var data = gtmGetDlBase();
            data.p_event = 'e_headersearchclicks';
            data.p_buttonname = objbtn.attr("name");
            data.p_searchquery = $("#topSearchMain").val();
            window.dataLayer.push(data);
            debugger;
        }
        function gtmTrackEvent_HeaderMobSearchClick(objbtn) {
            console.log("[GTM-DL]", "Track event Header Mobile Search Click", objbtn.attr("name"));
            var data = gtmGetDlBase();
            data.p_event = 'e_headersearchclicks';
            data.p_buttonname = objbtn.attr("name");
            data.p_searchquery = $("#topSearchMainMob").val();
            window.dataLayer.push(data);
            debugger;
        }

        $(document).ready(function () {
            $('#slick-images').on('init', function (e, slick) {
                var $firstAnimatingElements = $('div.hero-slide:first-child').find('[data-animation]');
                doAnimations($firstAnimatingElements);
            });
            $('#slick-images').on('beforeChange', function (e, slick, currentSlide, nextSlide) {
                var $animatingElements = $('div.img_contr_parnt[data-slick-index="' + nextSlide + '"]').find('[data-animation]');
                doAnimations($animatingElements);
            });
            $('#slick-images').slick({
                dots: true,
                slidesToShow: 1,
                slidesToScroll: 1,
                autoplay: true,
                arrows: false,
                draggable: false,
                autoplaySpeed: 8000,
                speed: 600,
                pauseOnHover: false,
                vertical: true,
            }); 8
            function doAnimations(elements) {
                var animationEndEvents = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';
                elements.each(function () {
                    var $this = $(this);
                    var $animationDelay = $this.data('delay');
                    var $animationType = 'animated ' + $this.data('animation');
                    $this.css({
                        'animation-delay': $animationDelay,
                        '-webkit-animation-delay': $animationDelay
                    });
                    $this.addClass($animationType).one(animationEndEvents, function () {
                        $this.removeClass($animationType);
                    });
                });
            }
        });


        $('.main-banner-x').slick({

            draggable: true,
            autoplay: true,
            autoplaySpeed: 1500,
            arrows: false,
            dots: true,
            fade: true,
            speed: 1000,
            infinite: true,
            cssEase: 'ease-in-out',
            touchThreshold: 100

        });

    </script>
    <!-- map -->
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAkr4m8chQdLrP-bLqx6bR2zeX_q3QT3Xc&callback=myMap"
            async defer></script>

    <script>
        function myMap() {
            var mapProp = {
                center: new google.maps.LatLng(51.508742, -0.120850),
                zoom: 5,
                disableDefaultUI: true
            };
            var map = new google.maps.Map(document.getElementById("cp"), mapProp);
            var mapProp2 = {
                center: new google.maps.LatLng(51.508742, -0.120850),
                zoom: 5,
                disableDefaultUI: true
            };
            var map = new google.maps.Map(document.getElementById("bp"), mapProp2);
            var mapProp3 = {
                center: new google.maps.LatLng(51.508742, -0.120850),
                zoom: 5,
                disableDefaultUI: true
            };
            var map = new google.maps.Map(document.getElementById("sp"), mapProp3);
            var marker = new google.maps.Marker({
                position: map.getCenter(),
                icon: 'img/location.png',
                map: map
            });
        }
    </script>
    <!--  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAkr4m8chQdLrP-bLqx6bR2zeX_q3QT3Xc&callback=initMap" async defer></script> -->
    <!-- map -->
    <script src="~/js/jquery-ui.min.js"></script>
    <script src="~/js/imgViewer2.js"></script>

    <script src="~/js/leaflet.js"></script>
<script>
    $(document).ready(function(){
        // Enable hover for dropdowns
        $('.dropdown-toggle').mouseenter(function(){
            $(this).dropdown('toggle');
        });
    });
</script>
    <script>
        window.fbAsyncInit = function () {
            FB.init({
                appId: '196586578204561',
                cookie: true,
                xfbml: true,
                version: 'v5.0'
            });
            FB.AppEvents.logPageView();

        };

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "https://connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));

        function submitAndShare(title, description, image) {
            // var image = 'https://www.svenskttenn.se/filtered/5043/rszww1600h1000-83/svenskt_tennkategoribild_tapeter-1699026363-rszww1600h1000-83.jpg';
            shareOverrideOGMeta(window.location.href,
                title,
                description,
                image);

            return false;
        }

        function shareOverrideOGMeta(overrideLink, overrideTitle, overrideDescription, overrideImage) {
            FB.ui({
                method: 'share_open_graph',
                action_type: 'og.likes',
                action_properties: JSON.stringify({
                    object: {
                        'og:url': overrideLink,
                        'og:title': overrideTitle,
                        'og:description': overrideDescription,
                        'og:image': overrideImage
                    }
                })
            },
                function (response) {
                    // Action after response
                });
        }

        function shareOriginal() {
            FB.ui({
                method: 'share',
                href: window.location.href
            },
                function (response) {
                    // Action after response
                });

            return false;
        }
    </script>
    <script src='//platform-api.sharethis.com/js/sharethis.js#property=5c74d47e312f9c0011357f4b&product=sticky-share-buttons'
            async='async'></script>

    <!-- Facebook Pixel Code -->
    <script>
        !function (f, b, e, v, n, t, s) {
            if (f.fbq) return; n = f.fbq = function () {
                n.callMethod ?
                    n.callMethod.apply(n, arguments) : n.queue.push(arguments)
            };
            if (!f._fbq) f._fbq = n; n.push = n; n.loaded = !0; n.version = '5.0';
            n.queue = []; t = b.createElement(e); t.async = !0;
            t.src = v; s = b.getElementsByTagName(e)[0];
            s.parentNode.insertBefore(t, s)
        }(window, document, 'script',
            'https://connect.facebook.net/en_US/fbevents.js');
        fbq('init', '196586578204561');
        fbq('track', 'PageView');
    </script>
    <noscript>
        <img height="1" width="1" style="display:none" alt="AlhamraMall"
             src="https://www.facebook.com/tr?id=196586578204561&ev=PageView&noscript=1" />
    </noscript>
    <!-- End Facebook Pixel Code -->
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-91120721-2"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-91120721-2');
    </script>

    <script src="~/js/jquery.validationEngine.js"></script>
    <script src="~/js/jquery.validationEngine.min.js"></script>
    <script>
        $(".like_btn_bottom").click(function () {

            $(this).addClass("likedbtn");
        });
    </script>

    @*
        <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.0.0.min.js"></script>*@
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.16.0/jquery.validate.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.min.js"></script>
   
        <script src="~/scripts/custom.js"></script>

    @{
        IEnumerable<IPublishedContent> serviceList = Model.AncestorOrSelf(1).DescendantsOfType("shopServicesLanding").FirstOrDefault()
            .Children().Where(e => e.IsVisible() && e.HasValue("servicesType"));
        IEnumerable<IPublishedContent> servicesTypeInHead = Model.AncestorOrSelf(1).DescendantsOfType("shopServices")
            .FirstOrDefault().Children().Where(e => e.IsVisible());
        IEnumerable<dynamic> servicesTypeList = servicesTypeInHead.Select(x => new
        {
            Category = x,
            ServiceCount = serviceList.Where(s => s.Value<IEnumerable<dynamic>>("servicesType").Any(sc => sc.Id == x.Id)).Count()
        });
        servicesTypeList = servicesTypeList.OrderByDescending(x => x.ServiceCount).OrderBy(x => ((IPublishedContent)x.Category).Value("serviceTitle"));
        int stIndex = 0;
        foreach (var scItem in servicesTypeList)
        {
            if (scItem.ServiceCount > 0 && stIndex <= 20)
            {
                IPublishedContent servicesType = scItem.Category;
                stIndex = stIndex + 1;
            }
        }

    }
    @{
        IEnumerable<IPublishedContent> shopList = Model.AncestorOrSelf(1).DescendantsOfType("shopsLanding").FirstOrDefault()
            .Children().Where(e => e.IsVisible() && e.HasValue("shopCategory"));
        IEnumerable<IPublishedContent> shopCategInHead = Model.AncestorOrSelf(1).DescendantsOfType("shopCategory")
            .FirstOrDefault().Children().Where(e => e.IsVisible());
        IEnumerable<dynamic> shopCategList = shopCategInHead.Select(x => new
        {
            Category = x,
            ShopCount = shopList.Where(s => s.Value<IEnumerable<dynamic>>("shopCategory").Any(sc => sc.Id == x.Id)).Count()
        });
        shopCategList = shopCategList.OrderByDescending(x => x.ShopCount).OrderBy(x => ((IPublishedContent)x.Category).Value("categoryTitle"));
        int scIndex = 0;
        foreach (var scItem in shopCategList)
        {
            if (scItem.ShopCount > 0 && scIndex <= 20)
            {
                IPublishedContent shopCateg = scItem.Category;
                scIndex = scIndex + 1;
            }
        }

    }
    @{
        IEnumerable<IPublishedContent> dineList = Model.AncestorOrSelf(1).DescendantsOfType("dineLanding").FirstOrDefault()
            .Children().Where(e => e.IsVisible() && e.HasValue("dineCategory"));
        IEnumerable<IPublishedContent> dineCategInHead = Model.AncestorOrSelf(1).DescendantsOfType("dineCategory")
            .FirstOrDefault().Children().Where(e => e.IsVisible());
        IEnumerable<dynamic> dineCategList = dineCategInHead.Select(x => new
        {
            Category = x,
            DineCount = dineList.Where(s => s.Value<IEnumerable<dynamic>>("dineCategory").Any(sc => sc.Id == x.Id)).Count()
        });
        dineCategList = dineCategList.OrderByDescending(x => x.DineCount).OrderBy(x => ((IPublishedContent)x.Category).Value("categoryTitle"));
        int dcIndex = 0;
        foreach (var dcItem in dineCategList)
        {
            if (dcItem.DineCount > 0 && dcIndex <= 20)
            {
                IPublishedContent dineCateg = dcItem.Category;
                dcIndex = dcIndex + 1;
            }
        }
    }
    @{
        IEnumerable<IPublishedContent> entertainment = Model.AncestorOrSelf(1).DescendantsOfType("entertainment");
        
        List<IPublishedContent> entertainmentList = new List<IPublishedContent>();
        
        foreach (var entertainmentNode in entertainment)
        {
            entertainmentList.AddRange(entertainmentNode.Children);
        }
    }
    @{
        IEnumerable<IPublishedContent> rewards = Model.AncestorOrSelf(1).DescendantsOfType("rewardsLanding");
        
        List<IPublishedContent> rewardsList = new List<IPublishedContent>();
        
        foreach (var rewardsNode in rewards)
        {
            rewardsList.AddRange(rewardsNode.Children);
        }
    }
    @{
        IEnumerable<IPublishedContent> services = Model.AncestorOrSelf(1).DescendantsOfType("servicesLanding");
        
        List<IPublishedContent> mallservicesList = new List<IPublishedContent>();
        
        foreach (var servicesNode in services)
        {
            mallservicesList.AddRange(servicesNode.Children);
        }
    }
    @{
        List<ShopItem> allPagesSearchList = new List<ShopItem>();
        foreach (var shop in shopList)
        {
            ShopItem shopItem = new ShopItem()
            {
                id = shop.Id.ToString(),
                name = shop.Value<string>("shopTitle"),
                url = string.Empty,
                tags = shop.HasValue("outletTags") ? shop.Value<string[]>("outletTags") : null,
                cat = string.Empty,
                catId = 0
            };
            var category = shopCategInHead.FirstOrDefault(categ => shop.Value<IEnumerable<dynamic>>("shopCategory").Any(sc => sc.Id == categ.Id));
            if (category != null)
            {
                shopItem.catId = category.Id;
                shopItem.url = category.Url;
                shopItem.cat = category.Value<string>("categoryTitle");
            }
    
            allPagesSearchList.Add(shopItem);
        }
        foreach (var dine in dineList)
        {
            ShopItem dineItem = new ShopItem()
            {
                id = dine.Id.ToString(),
                name = dine.Value<string>("shopTitle"),
                url = string.Empty,
                tags = dine.HasValue("outletTags") ? dine.Value<string[]>("outletTags") : null,
                cat = string.Empty,
                catId = 0
            };
            var category = dineCategInHead.FirstOrDefault(categ => dine.Value<IEnumerable<dynamic>>("dineCategory").Any(sc => sc.Id == categ.Id));
            if (category != null)
            {
                dineItem.catId = category.Id;
                dineItem.url = category.Url;
                dineItem.cat = category.Value<string>("categoryTitle");
            }
    
            allPagesSearchList.Add(dineItem);
        }
        foreach (var service in serviceList)
        {
            ShopItem serviceItem = new ShopItem()
            {
                id = service.Id.ToString(),
                name = service.Value<string>("shopTitle"),
                url = string.Empty,
                tags = service.HasValue("outletTags") ? service.Value<string[]>("outletTags") : null,
                cat = string.Empty,
                catId = 0
            };
            var category = servicesTypeInHead.FirstOrDefault(categ => service.Value<IEnumerable<dynamic>>("servicesType").Any(sc => sc.Id == categ.Id));
            if (category != null)
            {
                serviceItem.catId = category.Id;
                serviceItem.url = "/en/shop-category/services-banks-financial-services/";
                serviceItem.cat = category.Value<string>("serviceTitle");
            }
    
            allPagesSearchList.Add(serviceItem);
        }
        foreach (var entertain in entertainmentList)
        {
            ShopItem entertainmentItem = new ShopItem()
            {
                id = entertain.Id.ToString(),
                name = entertain.Value<string>("entertainmentDetailsTitle"),
                url = "/en/entertain/",
            };
            
            allPagesSearchList.Add(entertainmentItem);
        }
        foreach (var reward in rewardsList)
        {
            ShopItem rewardsItem = new ShopItem()
            {
                id = reward.Id.ToString(),
                name = reward.Value<string>("rewardsContentTitle"),
                url = "/en/rewards/",
            };
            
            allPagesSearchList.Add(rewardsItem);
        }
        foreach (var sr in mallservicesList)
        {
            ShopItem servicesItem = new ShopItem()
            {
                id = sr.Id.ToString(),
                name = sr.Value<string>("servicesContentTitle"),
                url = "/en/services/",
            };
            
            allPagesSearchList.Add(servicesItem);
        }
        foreach (var sr in children)
        {
            if (sr.Id != 1315 && sr.Id != 1761 && sr.Id != 1592 && sr.Id != 1394 && sr.Id != 1586 && sr.Id != 1343 && sr.Id != 1210)
            {
                ShopItem modelItem = new ShopItem()
                {
                    id = sr.Id.ToString(),
                    name = sr.Name,
                    url = sr.Url,
                };
                
                allPagesSearchList.Add(modelItem);
            }
        }
        var topSearchList = allPagesSearchList.OrderBy(x => x.name).ToList();
    }
    <script type="text/javascript">
        $(document).ready(function () {
            $('.navbar-toggler').click(function () {
                $('.navbar-collapse').toggle('fast')
            });
        });

        var topSearchListData = @Html.Raw(Json.Encode(topSearchList));
        //var searchGoHref = '(umbraco.library.NiceUrl(2057))';

        //Animation Script
        $(window).scroll(function () {
            AOS.init({
                easing: 'ease-out-back',
                duration: 1000
            });
        });

        $(window).on("load", function() {
            $("#loading-div").fadeOut(500);
        });



        /* $(function () {
            $('.menu-toggle').on('click', function () {
                $('header').toggleClass('is-open');
            });
            $('.search-icon').on('click', function () {
                var searchWrapper = $('.search');
                if (searchWrapper.hasClass('is-search-open')) {
                    searchWrapper.find('form').submit();
                } else {
                    searchWrapper.addClass('is-search-open').find('input').focus();
                }
            });
            $('.search-close-icon').on('click', function () {
                $('.search').removeClass('is-search-open');
            });
        })(); */
        
        <!--$('.fa-search').on('click', function(){-->
     
            
        <!--})-->
         $('.searchbox').hide();
        $('.fa-search').on('click', function(){
            if( $('.searchbox').hasClass('searchShow') == true ) {
                $('.searchbox').removeClass('searchShow').addClass('searchHide');
                $('.searchbox').hide();
                
            }
            else {
                $('.searchbox').removeClass('searchHide').addClass('searchShow');
                    $('.searchbox').show();
            }
        
        });
        
        
        
    </script>
</body>

</html>